{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassir\\\\Desktop\\\\TenderLink_ui\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [role, setRole] = useState(localStorage.getItem('role') || '');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role');\n    setIsAuthenticated(!!token);\n    setRole(storedRole || '');\n  }, []);\n  const login = (token, userRole) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', userRole);\n    setIsAuthenticated(true);\n    setRole(userRole);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setIsAuthenticated(false);\n    setRole('');\n  };\n  const validateToken = async () => {\n    try {\n      const response = await fetch('/api/validate-token', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) logout();\n    } catch (error) {\n      logout();\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) validateToken();\n  }, []);\n  const isAdmin = role === 'ADMIN';\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      role,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"Xqh+cpwC2NAfFP6g6+xREAl+T/A=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","localStorage","getItem","role","setRole","token","storedRole","login","userRole","setItem","logout","removeItem","validateToken","response","fetch","headers","Authorization","ok","error","isAdmin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yassir/Desktop/TenderLink_ui/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\r\n  const [role, setRole] = useState(localStorage.getItem('role') || '');\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedRole = localStorage.getItem('role');\r\n    setIsAuthenticated(!!token);\r\n    setRole(storedRole || '');\r\n  }, []);\r\n\r\n  const login = (token, userRole) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('role', userRole);\r\n    setIsAuthenticated(true);\r\n    setRole(userRole);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setIsAuthenticated(false);\r\n    setRole('');\r\n  };\r\n  const validateToken = async () => {\r\n    try {\r\n      const response = await fetch('/api/validate-token', {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      if (!response.ok) logout();\r\n    } catch (error) {\r\n      logout();\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (isAuthenticated) validateToken();\r\n  }, []);\r\n\r\n  const isAdmin = role === 'ADMIN';\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, role, isAdmin, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAEpEb,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMI,UAAU,GAAGL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/CF,kBAAkB,CAAC,CAAC,CAACK,KAAK,CAAC;IAC3BD,OAAO,CAACE,UAAU,IAAI,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACF,KAAK,EAAEG,QAAQ,KAAK;IACjCP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCJ,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAED,QAAQ,CAAC;IACtCR,kBAAkB,CAAC,IAAI,CAAC;IACxBI,OAAO,CAACI,QAAQ,CAAC;EACnB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BX,kBAAkB,CAAC,KAAK,CAAC;IACzBI,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EACD,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAClDC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASf,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAAE;MACtE,CAAC,CAAC;MACF,IAAI,CAACW,QAAQ,CAACI,EAAE,EAAEP,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdR,MAAM,CAAC,CAAC;IACV;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIU,eAAe,EAAEa,aAAa,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,OAAO,GAAGhB,IAAI,KAAK,OAAO;EAEhC,oBACEX,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,eAAe;MAAEI,IAAI;MAAEgB,OAAO;MAAEZ,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EAC5EA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC3B,GAAA,CA9CeF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}