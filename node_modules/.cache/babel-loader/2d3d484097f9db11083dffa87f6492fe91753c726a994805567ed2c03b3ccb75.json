{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /** AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = \"http://localhost:1010\";\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","email","password","response","post","BASE_URL","data","err","register","userData","token","headers","Authorization","getAllUsers","get","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["C:/Users/Yassir/Desktop/users-management-system-java-react/frontend/src/components/service/UserService.js"],"sourcesContent":["import axios from \"axios\";\n\nclass UserService {\n  static BASE_URL = \"http://localhost:1010\";\n\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, { email, password });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async register(userData, token) {\n    try {\n      const response = await axios.post(\n        `${UserService.BASE_URL}/auth/register`, \n        userData, \n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/admin/get-all-users`, \n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/adminuser/get-profile`, \n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(\n        `${UserService.BASE_URL}/admin/get-users/${userId}`, \n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(\n        `${UserService.BASE_URL}/admin/delete/${userId}`, \n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(\n        `${UserService.BASE_URL}/admin/update/${userId}`, \n        userData,\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /** AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\n\nexport default UserService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}