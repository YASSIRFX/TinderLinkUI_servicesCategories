{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassir\\\\Desktop\\\\TenderLink_ui\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  const [role, setRole] = useState(localStorage.getItem('role') || '');\n  useEffect(() => {\n    // Whenever localStorage changes (on page refresh or manual edits), sync state\n    const token = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role');\n    setIsAuthenticated(!!token);\n    setRole(storedRole || '');\n  }, []);\n\n  // Call this to log the user in and update global state + localStorage\n  const login = (token, userRole) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', userRole);\n    setIsAuthenticated(true);\n    setRole(userRole);\n  };\n\n  // Call this to log the user out and update global state + localStorage\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    setIsAuthenticated(false);\n    setRole('');\n  };\n\n  // A helper to check if the user is an admin\n  const isAdmin = role === 'ADMIN';\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      role,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"qFuBRK6TpKX0eEZs8GQJgaPEo68=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","role","setRole","token","storedRole","login","userRole","setItem","logout","removeItem","isAdmin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yassir/Desktop/TenderLink_ui/src/AuthContext.js"],"sourcesContent":["// src/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\r\n  const [role, setRole] = useState(localStorage.getItem('role') || '');\r\n\r\n  useEffect(() => {\r\n    // Whenever localStorage changes (on page refresh or manual edits), sync state\r\n    const token = localStorage.getItem('token');\r\n    const storedRole = localStorage.getItem('role');\r\n    setIsAuthenticated(!!token);\r\n    setRole(storedRole || '');\r\n  }, []);\r\n\r\n  // Call this to log the user in and update global state + localStorage\r\n  const login = (token, userRole) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('role', userRole);\r\n    setIsAuthenticated(true);\r\n    setRole(userRole);\r\n  };\r\n\r\n  // Call this to log the user out and update global state + localStorage\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setIsAuthenticated(false);\r\n    setRole('');\r\n  };\r\n\r\n  // A helper to check if the user is an admin\r\n  const isAdmin = role === 'ADMIN';\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, role, isAdmin, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASM,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EAEpEV,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMI,UAAU,GAAGL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/CF,kBAAkB,CAAC,CAAC,CAACK,KAAK,CAAC;IAC3BD,OAAO,CAACE,UAAU,IAAI,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAGA,CAACF,KAAK,EAAEG,QAAQ,KAAK;IACjCP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCJ,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAED,QAAQ,CAAC;IACtCR,kBAAkB,CAAC,IAAI,CAAC;IACxBI,OAAO,CAACI,QAAQ,CAAC;EACnB,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BX,kBAAkB,CAAC,KAAK,CAAC;IACzBI,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA,MAAMQ,OAAO,GAAGT,IAAI,KAAK,OAAO;EAEhC,oBACET,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,eAAe;MAAEI,IAAI;MAAES,OAAO;MAAEL,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EAC5EA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACpB,EAAA,CApCeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}