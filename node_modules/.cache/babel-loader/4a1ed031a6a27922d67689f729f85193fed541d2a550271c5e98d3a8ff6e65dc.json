{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassir\\\\Desktop\\\\TenderLink_ui\\\\src\\\\components\\\\categories\\\\CategoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CategoryService from '../../services/CategoryService';\nimport { useAuth } from '../../AuthContext';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    authToken\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    name: ''\n  });\n  useEffect(() => {\n    if (id) fetchCategory();\n  }, [id]);\n  const fetchCategory = async () => {\n    try {\n      const data = await CategoryService.getCategoryById(id);\n      setFormData(data);\n    } catch (error) {\n      console.error('Error fetching category:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (id) {\n        await CategoryService.updateCategory(id, formData, authToken);\n      } else {\n        await CategoryService.createCategory(formData, authToken);\n      }\n      navigate('/categories');\n    } catch (error) {\n      console.error('Error saving category:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: formData.name,\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      }),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryForm, \"wp5QT3Zzh4dHNrl07iAFaZHdMjw=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = CategoryForm;\nexport default CategoryForm;\nvar _c;\n$RefreshReg$(_c, \"CategoryForm\");","map":{"version":3,"names":["React","useEffect","useState","CategoryService","useAuth","useParams","useNavigate","jsxDEV","_jsxDEV","CategoryForm","_s","id","navigate","authToken","formData","setFormData","name","fetchCategory","data","getCategoryById","error","console","handleSubmit","e","preventDefault","updateCategory","createCategory","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/Yassir/Desktop/TenderLink_ui/src/components/categories/CategoryForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CategoryService from '../../services/CategoryService';\r\nimport { useAuth } from '../../AuthContext';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst CategoryForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { authToken } = useAuth();\r\n  const [formData, setFormData] = useState({ name: '' });\r\n\r\n  useEffect(() => {\r\n    if (id) fetchCategory();\r\n  }, [id]);\r\n\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const data = await CategoryService.getCategoryById(id);\r\n      setFormData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching category:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (id) {\r\n        await CategoryService.updateCategory(id, formData, authToken);\r\n      } else {\r\n        await CategoryService.createCategory(formData, authToken);\r\n      }\r\n      navigate('/categories');\r\n    } catch (error) {\r\n      console.error('Error saving category:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={formData.name}\r\n        onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n        placeholder=\"Name\"\r\n      />\r\n      <button type=\"submit\">Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAU,CAAC,GAAGT,OAAO,CAAC,CAAC;EAC/B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IAAEc,IAAI,EAAE;EAAG,CAAC,CAAC;EAEtDf,SAAS,CAAC,MAAM;IACd,IAAIU,EAAE,EAAEM,aAAa,CAAC,CAAC;EACzB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMf,eAAe,CAACgB,eAAe,CAACR,EAAE,CAAC;MACtDI,WAAW,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIb,EAAE,EAAE;QACN,MAAMR,eAAe,CAACsB,cAAc,CAACd,EAAE,EAAEG,QAAQ,EAAED,SAAS,CAAC;MAC/D,CAAC,MAAM;QACL,MAAMV,eAAe,CAACuB,cAAc,CAACZ,QAAQ,EAAED,SAAS,CAAC;MAC3D;MACAD,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMmB,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BpB,OAAA;MACEqB,KAAK,EAAEf,QAAQ,CAACE,IAAK;MACrBc,QAAQ,EAAGP,CAAC,IAAKR,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAEO,CAAC,CAACQ,MAAM,CAACF;MAAM,CAAC,CAAE;MACpEG,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACF5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA3CID,YAAY;EAAA,QACDJ,SAAS,EACPC,WAAW,EACNF,OAAO;AAAA;AAAAkC,EAAA,GAHzB7B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}