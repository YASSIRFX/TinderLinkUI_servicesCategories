{"ast":null,"code":"/*// src/services/CategoryService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:7070/api/categories';\r\n\r\nclass CategoryService {\r\n  static async getAllCategories(token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/all`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async getCategoryById(id, token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async createCategory(category, token) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/add`, category, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async updateCategory(id, category, token) {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/update/${id}`, category, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async deleteCategory(id, token) {\r\n    try {\r\n      const response = await axios.delete(`${API_URL}/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryService;*/\n// src/services/CategoryService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:7070/api/categories';\nclass CategoryService {\n  static async getAllCategories(token) {\n    try {\n      const response = await axios.get(`${API_URL}/all`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getCategoryById(id, token) {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async createCategory(category, token) {\n    try {\n      const response = await axios.post(`${API_URL}/add`, category, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateCategory(id, category, token) {\n    try {\n      const response = await axios.put(`${API_URL}/update/${id}`, category, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteCategory(id, token) {\n    try {\n      const response = await axios.delete(`${API_URL}/delete/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\nexport default CategoryService;","map":{"version":3,"names":["axios","API_URL","CategoryService","getAllCategories","token","response","get","headers","Authorization","data","err","getCategoryById","id","createCategory","category","post","updateCategory","put","deleteCategory","delete"],"sources":["C:/Users/Yassir/Desktop/TenderLink_ui/src/services/CategoryService.js"],"sourcesContent":["/*// src/services/CategoryService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:7070/api/categories';\r\n\r\nclass CategoryService {\r\n  static async getAllCategories(token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/all`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async getCategoryById(id, token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async createCategory(category, token) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/add`, category, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async updateCategory(id, category, token) {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/update/${id}`, category, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async deleteCategory(id, token) {\r\n    try {\r\n      const response = await axios.delete(`${API_URL}/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryService;*/\r\n// src/services/CategoryService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:7070/api/categories';\r\n\r\nclass CategoryService {\r\n  static async getAllCategories(token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/all`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async getCategoryById(id, token) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async createCategory(category, token) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/add`, category, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async updateCategory(id, category, token) {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/update/${id}`, category, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async deleteCategory(id, token) {\r\n    try {\r\n      const response = await axios.delete(`${API_URL}/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CategoryService;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,MAAMC,eAAe,CAAC;EACpB,aAAaC,gBAAgBA,CAACC,KAAK,EAAE;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,MAAK,EAAE;QACjDM,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaC,eAAeA,CAACC,EAAE,EAAER,KAAK,EAAE;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,IAAGW,EAAG,EAAC,EAAE;QACnDL,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaG,cAAcA,CAACC,QAAQ,EAAEV,KAAK,EAAE;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACe,IAAI,CAAE,GAAEd,OAAQ,MAAK,EAAEa,QAAQ,EAAE;QAC5DP,OAAO,EAAE;UACPC,aAAa,EAAG,UAASJ,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaM,cAAcA,CAACJ,EAAE,EAAEE,QAAQ,EAAEV,KAAK,EAAE;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAAE,GAAEhB,OAAQ,WAAUW,EAAG,EAAC,EAAEE,QAAQ,EAAE;QACpEP,OAAO,EAAE;UACPC,aAAa,EAAG,UAASJ,KAAM,EAAC;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaQ,cAAcA,CAACN,EAAE,EAAER,KAAK,EAAE;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACmB,MAAM,CAAE,GAAElB,OAAQ,WAAUW,EAAG,EAAC,EAAE;QAC7DL,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;AACF;AAEA,eAAeR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}