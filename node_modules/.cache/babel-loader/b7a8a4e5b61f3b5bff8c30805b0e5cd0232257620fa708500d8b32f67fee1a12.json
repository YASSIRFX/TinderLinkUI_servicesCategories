{"ast":null,"code":"import axios from 'axios';\nclass ServiceService {\n  static async createService(serviceData, token) {\n    try {\n      const response = await axios.post(`${this.BASE_URL}/api/services/add`, serviceData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllServices() {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/api/services/all`);\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getServiceById(id) {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/api/services/${id}`);\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateService(id, serviceData, token) {\n    try {\n      const response = await axios.put(`${this.BASE_URL}/api/services/update/${id}`, serviceData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        validateStatus: status => status >= 200 && status < 300 || status === 204 // accept 204 as success\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteService(id, token) {\n    try {\n      const response = await axios.delete(`${this.BASE_URL}/api/services/delete/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async searchServices(query) {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/api/services/search`, {\n        params: {\n          query\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\nServiceService.BASE_URL = 'http://localhost:7070';\nexport default ServiceService;","map":{"version":3,"names":["axios","ServiceService","createService","serviceData","token","response","post","BASE_URL","headers","Authorization","data","err","getAllServices","get","getServiceById","id","updateService","put","validateStatus","status","deleteService","delete","searchServices","query","params"],"sources":["C:/Users/Yassir/Desktop/TenderLink_ui/src/services/ServiceService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nclass ServiceService {\r\n  static BASE_URL = 'http://localhost:7070';\r\n\r\n  static async createService(serviceData, token) {\r\n    try {\r\n      const response = await axios.post(`${this.BASE_URL}/api/services/add`, serviceData, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async getAllServices() {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/api/services/all`);\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async getServiceById(id) {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/api/services/${id}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async updateService(id, serviceData, token) {\r\n    try {\r\n      const response = await axios.put(\r\n        `${this.BASE_URL}/api/services/update/${id}`,\r\n        serviceData,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          validateStatus: status => (status >= 200 && status < 300) || status === 204, // accept 204 as success\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n  \r\n\r\n  static async deleteService(id, token) {\r\n    try {\r\n      const response = await axios.delete(`${this.BASE_URL}/api/services/delete/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  static async searchServices(query) {\r\n    try {\r\n      const response = await axios.get(`${this.BASE_URL}/api/services/search`, {\r\n        params: { query }\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ServiceService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,CAAC;EAGnB,aAAaC,aAAaA,CAACC,WAAW,EAAEC,KAAK,EAAE;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAE,GAAE,IAAI,CAACC,QAAS,mBAAkB,EAAEJ,WAAW,EAAE;QAClFK,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaC,cAAcA,CAAA,EAAG;IAC5B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAE,GAAE,IAAI,CAACN,QAAS,mBAAkB,CAAC;MACrE,OAAOF,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaG,cAAcA,CAACC,EAAE,EAAE;IAC9B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAE,GAAE,IAAI,CAACN,QAAS,iBAAgBQ,EAAG,EAAC,CAAC;MACvE,OAAOV,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaK,aAAaA,CAACD,EAAE,EAAEZ,WAAW,EAAEC,KAAK,EAAE;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAC7B,GAAE,IAAI,CAACV,QAAS,wBAAuBQ,EAAG,EAAC,EAC5CZ,WAAW,EACX;QACEK,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE,CAAC;QAC7Cc,cAAc,EAAEC,MAAM,IAAKA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,IAAKA,MAAM,KAAK,GAAG,CAAE;MAC/E,CACF,CAAC;MACD,OAAOd,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAGA,aAAaS,aAAaA,CAACL,EAAE,EAAEX,KAAK,EAAE;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACqB,MAAM,CAAE,GAAE,IAAI,CAACd,QAAS,wBAAuBQ,EAAG,EAAC,EAAE;QAChFP,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE;MAC9C,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EAEA,aAAaW,cAAcA,CAACC,KAAK,EAAE;IACjC,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAML,KAAK,CAACa,GAAG,CAAE,GAAE,IAAI,CAACN,QAAS,sBAAqB,EAAE;QACvEiB,MAAM,EAAE;UAAED;QAAM;MAClB,CAAC,CAAC;MACF,OAAOlB,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;AACF;AAtEMV,cAAc,CACXM,QAAQ,GAAG,uBAAuB;AAuE3C,eAAeN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}